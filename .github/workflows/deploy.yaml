name: Deploy
on:
  push:
    branches:
      - master

jobs:
  build_back:
    name: Build a Backend
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Build
        run: docker compose build backend
        env:
          ENV_MODE: prod
          BACKEND_PORT: ${{ secrets.PROD_BACKEND_PORT }}
          FRONTEND_PORT: ${{ secrets.PROD_FRONTEND_PORT }}

      - name: Log in to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push to registry
        run: docker push ghcr.io/solutions-uray/backend:prod

  build_front:
    name: Build a Frontend
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Build
        run: docker compose build frontend
        env:
          ENV_MODE: prod
          BACKEND_PORT: ${{ secrets.PROD_BACKEND_PORT }}
          FRONTEND_PORT: ${{ secrets.PROD_FRONTEND_PORT }}

      - name: Log in to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push to registry
        run: docker push ghcr.io/solutions-uray/frontend:prod


  deploy:
    runs-on: [ self-hosted, prod ]
    needs: [ build_front, build_back ]
    permissions:
      contents: read
      packages: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Pull backend from registry Backend
        run: docker pull ghcr.io/solutions-uray/backend:prod

      - name: Pull backend from registry Frontend
        run: docker pull ghcr.io/solutions-uray/frontend:prod

      - name: Start with Docker Compose
        run: docker compose up -d --force-recreate
        env:
          COMPOSE_PROJECT_NAME: prod
          ENV_MODE: prod
          BACKEND_PORT: ${{ secrets.PROD_BACKEND_PORT }}
          FRONTEND_PORT: ${{ secrets.PROD_FRONTEND_PORT }}
          JWT_SECRET: ${{ secrets.PROD_JWT_SECRET }}
          JWT_EXPIRESIN: ${{ secrets.PROD_JWT_EXPIRESIN }}
          PGDATABASE: ${{ secrets.PROD_PGDATABASE }}
          PGUSER: ${{ secrets.PROD_PGUSER }}
          PGPASSWORD: ${{ secrets.PROD_PGPASSWORD }}
          PGPORT: ${{ secrets.PROD_PGPORT }}
          PGHOST: ${{ secrets.PROD_PGHOST }}
          PRODUCT_URL: ${{ secrets.PROD_PRODUCT_URL }}
